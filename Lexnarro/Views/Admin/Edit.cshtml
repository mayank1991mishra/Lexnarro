@model Lexnarro.Models.User_Profile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .disabled {
        opacity: 0.6;
        pointer-events: none;
    }
</style>

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="form-horizontal col-lg-6 col-lg-offset-2">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Other Name", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OtherName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OtherName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Street Number", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.StreetNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StreetNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Street Name", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Postal Code", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Suburb", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("State", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("StateID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("State Enrolled", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("StateEnrolled", null, htmlAttributes: new { @class = "form-control disabled" })
                    @Html.ValidationMessageFor(model => model.StateEnrolled, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Law Society Number", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.LawSocietyNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LawSocietyNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control disabled" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Phone Number", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group hidden">
                @Html.Label("UserName", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @placeholder = "dd/mm/yyyy" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group hidden">
                @Html.LabelFor(model => model.Role_id, "User Role", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("Role_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Role_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group hidden">
                @Html.LabelFor(model => model.Device_Imei, "Device IMEI", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Device_Imei, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Device_Imei, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group hidden">
                @Html.LabelFor(model => model.Device_Token, "Device Token", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Device_Token, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Device_Token, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group hidden">
                @Html.LabelFor(model => model.Device_Type, "Device Type", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Device_Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Device_Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Profile", null, htmlAttributes: new { @class = "btn btn-primary" })
</div>

@section Scripts {
    <script>
        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || $.datepicker.parseDate('dd/mm/yy', value);
            }
        });
    </script>

    <script>
        $(function () {

            $('#CountryID').change(function () {
                var CountryID = $("#CountryID").val();
                var items1 = '<option>- Select State -</option>';
                var items2 = '<option>- Select State -</option>';
                $.ajax
                ({
                    url: '@Url.Action("StateList", "User")',
                    type: 'GET',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: { 'CountryID': CountryID },

                    success: function (result) {
                        $("#StateID").html("");
                        $.each(result, function (i, state) {
                            items1 += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                        })
                        $('#StateID').html(items1);

                        $("#StateEnrolled").html("");
                        $.each(result, function (i, state) {
                            items2 += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                        })
                        $('#StateEnrolled').html(items2);
                    },
                    error: function () {
                        alert("Whooaaa! Something went wrong..")
                    },
                });
            });
        })
    </script>

    <script>
        $(function () {

            var CountryID = $("#CountryID").val();
            var StateID = $("#StateID").val();
            var StateEnrolled = $("#StateEnrolled").val();

            var items1 = '<option>- Select State -</option>';
            var items2 = '<option>- Select State -</option>';
            $.ajax
            ({
                url: '@Url.Action("StateList", "User")',
                type: 'GET',
                datatype: 'application/json',
                contentType: 'application/json',
                data: { 'CountryID': CountryID },

                success: function (result) {
                    $("#StateID").html("");
                    $.each(result, function (i, state) {
                        items1 += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                    })
                    $('#StateID').html(items1);

                    $("#StateID").val(StateID).change();

                    $("#StateEnrolled").html("");
                    $.each(result, function (i, state) {
                        items2 += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                    })
                    $('#StateEnrolled').html(items2);
                    $("#StateEnrolled").val(StateEnrolled).change();
                },
                error: function () {
                    alert("Whooaaa! Something went wrong..")
                },
            });
        });
    </script>

    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+12"
            });
        });
    </script>
}

@section JavaScript
{
    @Html.Raw(ViewBag.message)
}

